{"ast":null,"code":"var _jsxFileName = \"D:\\\\Poll app\\\\react-poll\\\\src\\\\components\\\\Poll.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Poll.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Poll() {\n  _s();\n\n  const [voteData, setVoteData] = useState();\n  const [totalVotes, setTotalVotes] = useState(0);\n  const [voted, setVoted] = useState(false);\n  const url = \"http://localhost:5000/poll\";\n  useEffect(() => {\n    fetch(url).then(response => response.json()).then(data => {\n      setVoteData(data);\n      let sum = 0;\n      data.forEach(function (obj) {\n        sum += obj.votes;\n      });\n      setTotalVotes(sum);\n    });\n  }, []);\n\n  const submitVote = e => {\n    if (voted === false) {\n      const voteSelected = e.target.dataset.id;\n      const voteCurrent = voteData[voteSelected].votes;\n      voteData[voteSelected].votes = voteCurrent + 1;\n      setTotalVotes(totalVotes + 1);\n      setVoted(!voted);\n      const options = {\n        method: \"POST\",\n        body: JSON.stringify(voteData),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      fetch(url, options).then(res => res.json()).then(res => console.log(res));\n    }\n  };\n\n  let pollOptions;\n\n  if (voteData) {\n    pollOptions = voteData.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitVote,\n          \"data-id\": item.id,\n          children: [item.option, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"- \", item.votes, \" Votes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poll\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Which option do you like the best?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: voted ? \"results\" : \"options\",\n      children: pollOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Votes: \", totalVotes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Poll, \"TtS2UO4u3AczXvOfm8ri07NgsCU=\");\n\n_c = Poll;\nexport default Poll;\n\nvar _c;\n\n$RefreshReg$(_c, \"Poll\");","map":{"version":3,"names":["React","useState","useEffect","Poll","voteData","setVoteData","totalVotes","setTotalVotes","voted","setVoted","url","fetch","then","response","json","data","sum","forEach","obj","votes","submitVote","e","voteSelected","target","dataset","id","voteCurrent","options","method","body","JSON","stringify","headers","res","console","log","pollOptions","map","item","option"],"sources":["D:/Poll app/react-poll/src/components/Poll.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Poll.css\";\r\n\r\nfunction Poll() {  \r\n    const [voteData, setVoteData] = useState();\r\n    const [totalVotes, setTotalVotes] = useState(0);\r\n    const [voted, setVoted] = useState(false);\r\n\r\n    const url = \"http://localhost:5000/poll\";\r\n    useEffect(() => {\r\n        fetch(url)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setVoteData(data);\r\n                let sum = 0;\r\n                data.forEach(function (obj) {\r\n                    sum += obj.votes;\r\n                });\r\n                setTotalVotes(sum);\r\n            });\r\n    }, []);\r\n    const submitVote = (e) => {\r\n        if (voted === false) {\r\n            const voteSelected = e.target.dataset.id;\r\n            const voteCurrent = voteData[voteSelected].votes;\r\n            voteData[voteSelected].votes = voteCurrent + 1;\r\n            setTotalVotes(totalVotes + 1);\r\n            setVoted(!voted);\r\n            const options = {\r\n                method: \"POST\",\r\n                body: JSON.stringify(voteData),\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n            };\r\n            fetch(url, options)\r\n                .then((res) => res.json())\r\n                .then((res) => console.log(res));\r\n        }\r\n    };\r\n\r\n    let pollOptions;\r\n    if (voteData) {\r\n        pollOptions = voteData.map((item) => {\r\n            return (\r\n                <li key={item.id}>\r\n                    <button onClick={submitVote} data-id={item.id}>\r\n                        {item.option}\r\n                        <span>- {item.votes} Votes</span>\r\n                    </button>\r\n                </li>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <div className=\"poll\">\r\n            <h1>Which option do you like the best?</h1>\r\n            <ul className={voted ? \"results\" : \"options\"}>\r\n                {pollOptions}\r\n            </ul>\r\n            <p>Total Votes: {totalVotes}</p>\r\n        </div>\r\n    );  \r\n}\r\nexport default Poll;\r\n\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,YAAP;;;AAEA,SAASC,IAAT,GAAgB;EAAA;;EACZ,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,EAAxC;EACA,MAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,CAAD,CAA5C;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;EAEA,MAAMS,GAAG,GAAG,4BAAZ;EACAR,SAAS,CAAC,MAAM;IACZS,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEWG,IAAD,IAAU;MACZV,WAAW,CAACU,IAAD,CAAX;MACA,IAAIC,GAAG,GAAG,CAAV;MACAD,IAAI,CAACE,OAAL,CAAa,UAAUC,GAAV,EAAe;QACxBF,GAAG,IAAIE,GAAG,CAACC,KAAX;MACH,CAFD;MAGAZ,aAAa,CAACS,GAAD,CAAb;IACH,CATL;EAUH,CAXQ,EAWN,EAXM,CAAT;;EAYA,MAAMI,UAAU,GAAIC,CAAD,IAAO;IACtB,IAAIb,KAAK,KAAK,KAAd,EAAqB;MACjB,MAAMc,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiBC,EAAtC;MACA,MAAMC,WAAW,GAAGtB,QAAQ,CAACkB,YAAD,CAAR,CAAuBH,KAA3C;MACAf,QAAQ,CAACkB,YAAD,CAAR,CAAuBH,KAAvB,GAA+BO,WAAW,GAAG,CAA7C;MACAnB,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;MACAG,QAAQ,CAAC,CAACD,KAAF,CAAR;MACA,MAAMmB,OAAO,GAAG;QACZC,MAAM,EAAE,MADI;QAEZC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe3B,QAAf,CAFM;QAGZ4B,OAAO,EAAE;UAAE,gBAAgB;QAAlB;MAHG,CAAhB;MAKArB,KAAK,CAACD,GAAD,EAAMiB,OAAN,CAAL,CACKf,IADL,CACWqB,GAAD,IAASA,GAAG,CAACnB,IAAJ,EADnB,EAEKF,IAFL,CAEWqB,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFnB;IAGH;EACJ,CAhBD;;EAkBA,IAAIG,WAAJ;;EACA,IAAIhC,QAAJ,EAAc;IACVgC,WAAW,GAAGhC,QAAQ,CAACiC,GAAT,CAAcC,IAAD,IAAU;MACjC,oBACI;QAAA,uBACI;UAAQ,OAAO,EAAElB,UAAjB;UAA6B,WAASkB,IAAI,CAACb,EAA3C;UAAA,WACKa,IAAI,CAACC,MADV,eAEI;YAAA,iBAASD,IAAI,CAACnB,KAAd;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ,GAASmB,IAAI,CAACb,EAAd;QAAA;QAAA;QAAA;MAAA,QADJ;IAQH,CATa,CAAd;EAUH;;EACD,oBACI;IAAK,SAAS,EAAC,MAAf;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAI,SAAS,EAAEjB,KAAK,GAAG,SAAH,GAAe,SAAnC;MAAA,UACK4B;IADL;MAAA;MAAA;MAAA;IAAA,QAFJ,eAKI;MAAA,4BAAiB9B,UAAjB;IAAA;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AASH;;GA1DQH,I;;KAAAA,I;AA2DT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}