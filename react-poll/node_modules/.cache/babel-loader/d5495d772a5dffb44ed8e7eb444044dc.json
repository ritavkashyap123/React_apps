{"ast":null,"code":"var _jsxFileName = \"D:\\\\Poll app\\\\react-poll\\\\src\\\\components\\\\Poll.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Poll.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Poll() {\n  _s();\n\n  const [voteData, setVoteData] = useState();\n  const [totalVotes, setTotalVotes] = useState(0);\n  const [voted, setVoted] = useState(false);\n}\n\n_s(Poll, \"6vsTpYXsMH32cQq7SU/jtF90vk4=\");\n\n_c = Poll;\nexport default Poll;\nconst url = \"http://localhost:5000/poll\";\nuseEffect(() => {\n  fetch(url).then(response => response.json()).then(data => {\n    setVoteData(data);\n    let sum = 0;\n    data.forEach(function (obj) {\n      sum += obj.votes;\n    });\n    setTotalVotes(sum);\n  });\n}, []);\n\nconst submitVote = e => {\n  if (voted === false) {\n    const voteSelected = e.target.dataset.id;\n    const voteCurrent = voteData[voteSelected].votes;\n    voteData[voteSelected].votes = voteCurrent + 1;\n    setTotalVotes(totalVotes + 1);\n    setVoted(!voted);\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(voteData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(url, options).then(res => res.json()).then(res => console.log(res));\n  }\n};\n\nlet pollOptions;\n\nif (voteData) {\n  pollOptions = voteData.map(item => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitVote,\n        \"data-id\": item.id,\n        children: [item.option, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"- \", item.votes, \" Votes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  });\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Poll\");","map":{"version":3,"names":["React","useState","useEffect","Poll","voteData","setVoteData","totalVotes","setTotalVotes","voted","setVoted","url","fetch","then","response","json","data","sum","forEach","obj","votes","submitVote","e","voteSelected","target","dataset","id","voteCurrent","options","method","body","JSON","stringify","headers","res","console","log","pollOptions","map","item","option"],"sources":["D:/Poll app/react-poll/src/components/Poll.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Poll.css\";\r\n\r\nfunction Poll() {  \r\n    const [voteData, setVoteData] = useState();\r\n    const [totalVotes, setTotalVotes] = useState(0);\r\n    const [voted, setVoted] = useState(false);\r\n}\r\nexport default Poll;\r\n\r\nconst url = \"http://localhost:5000/poll\";\r\nuseEffect(() => {\r\n  fetch(url)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      setVoteData(data);\r\n      let sum = 0;\r\n      data.forEach(function (obj) {\r\n        sum += obj.votes;\r\n      });\r\n      setTotalVotes(sum);\r\n    });\r\n}, []);\r\n\r\n\r\nconst submitVote = (e) => {\r\n    if(voted === false) {\r\n      const voteSelected = e.target.dataset.id;\r\n      const voteCurrent = voteData[voteSelected].votes;\r\n      voteData[voteSelected].votes = voteCurrent + 1;\r\n      setTotalVotes(totalVotes + 1);\r\n      setVoted(!voted);\r\n      const options = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(voteData),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      };\r\n      fetch(url, options)\r\n        .then((res) => res.json())\r\n        .then((res) => console.log(res));\r\n    }\r\n  };\r\n\r\n  let pollOptions;\r\nif (voteData) {\r\n  pollOptions = voteData.map((item) => {\r\n    return (\r\n      <li key={item.id}>\r\n        <button onClick={submitVote} data-id={item.id}>\r\n          {item.option}\r\n          <span>- {item.votes} Votes</span>\r\n        </button>          \r\n      </li>\r\n    );\r\n  });\r\n}\r\n\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,YAAP;;;AAEA,SAASC,IAAT,GAAgB;EAAA;;EACZ,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,EAAxC;EACA,MAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,CAAD,CAA5C;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;AACH;;GAJQE,I;;KAAAA,I;AAKT,eAAeA,IAAf;AAEA,MAAMO,GAAG,GAAG,4BAAZ;AACAR,SAAS,CAAC,MAAM;EACdS,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;IACdV,WAAW,CAACU,IAAD,CAAX;IACA,IAAIC,GAAG,GAAG,CAAV;IACAD,IAAI,CAACE,OAAL,CAAa,UAAUC,GAAV,EAAe;MAC1BF,GAAG,IAAIE,GAAG,CAACC,KAAX;IACD,CAFD;IAGAZ,aAAa,CAACS,GAAD,CAAb;EACD,CATH;AAUD,CAXQ,EAWN,EAXM,CAAT;;AAcA,MAAMI,UAAU,GAAIC,CAAD,IAAO;EACtB,IAAGb,KAAK,KAAK,KAAb,EAAoB;IAClB,MAAMc,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiBC,EAAtC;IACA,MAAMC,WAAW,GAAGtB,QAAQ,CAACkB,YAAD,CAAR,CAAuBH,KAA3C;IACAf,QAAQ,CAACkB,YAAD,CAAR,CAAuBH,KAAvB,GAA+BO,WAAW,GAAG,CAA7C;IACAnB,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;IACAG,QAAQ,CAAC,CAACD,KAAF,CAAR;IACA,MAAMmB,OAAO,GAAG;MACdC,MAAM,EAAE,MADM;MAEdC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe3B,QAAf,CAFQ;MAGd4B,OAAO,EAAE;QAAE,gBAAgB;MAAlB;IAHK,CAAhB;IAKArB,KAAK,CAACD,GAAD,EAAMiB,OAAN,CAAL,CACGf,IADH,CACSqB,GAAD,IAASA,GAAG,CAACnB,IAAJ,EADjB,EAEGF,IAFH,CAESqB,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFjB;EAGD;AACF,CAhBH;;AAkBE,IAAIG,WAAJ;;AACF,IAAIhC,QAAJ,EAAc;EACZgC,WAAW,GAAGhC,QAAQ,CAACiC,GAAT,CAAcC,IAAD,IAAU;IACnC,oBACE;MAAA,uBACE;QAAQ,OAAO,EAAElB,UAAjB;QAA6B,WAASkB,IAAI,CAACb,EAA3C;QAAA,WACGa,IAAI,CAACC,MADR,eAEE;UAAA,iBAASD,IAAI,CAACnB,KAAd;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF,GAASmB,IAAI,CAACb,EAAd;MAAA;MAAA;MAAA;IAAA,QADF;EAQD,CATa,CAAd;AAUD"},"metadata":{},"sourceType":"module"}